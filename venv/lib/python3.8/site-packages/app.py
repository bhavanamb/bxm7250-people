from flask import Flask, render_template, request, redirect, url_for
from flask import render_template
from datetime import datetime
import mysql.connector
from mysql.connector import errorcode
from mysql.connector.constants import ClientFlag
import re
import os
from os.path import join, dirname, realpath
import pandas as pd
import csv
app = Flask(__name__)

app.config["DEBUG"] = True

UPLOAD_FOLDER = 'venv/static/files/'
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

# Obtain connection string information from the portal
config = {
    'host': 'adb-2021.mysql.database.azure.com',
    'port': 3306,
    'user': 'bhavana@adb-2021',
    'password': 'ct$q5Jpkw86qmJ&R2',
    'database': 'student_info',
    'client_flags': [ClientFlag.SSL],
    'ssl_ca': 'venv/include/BaltimoreCyberTrustRoot.crt.pem',
    'ssl_verify_cert': True
}

# Construct connection string

conn = mysql.connector.connect(**config)
dbcursor = conn.cursor()
dbcursor.execute("SHOW DATABASES")
print("Connection established")
for x in dbcursor:
    print(x)


@app.route("/")
def index():
    return render_template(
        "index.html"
    )


@app.route("/data", methods=['POST'])
def uploadFile():
    print("inside Upload")
    # uploaded_file = request.form['filename']
    file = request.files['file']
    # print(file.filename)
    if file:
        print("inside loop")
        file_path = os.path.join(app.config['UPLOAD_FOLDER'], file.filename)
        file.save(file_path)
        message = 'The file "' + file.filename + '" was uploaded successfully'
        print(message)
        parseCSV(file_path)
    else:
        message = 'The file was notuploaded successfully'
        # print(message)
#        with open(uploaded_file, 'r') as file:
#          csvfile = csv.reader(file)
#          print(csvfile)
#     data = []
#     with open(uploaded_file) as file:
#         csvfile = csv.reader(file)
#         for row in csvfile:
#             data.append(row)
#             print(data)
    return redirect(url_for('index'))
#     if uploaded_file.filename != '':
#         file_path = os.path.join(
#             app.config['UPLOAD_FOLDER'], uploaded_file.filename)
#         uploaded_file.save(file_path)
#         parseCSV(file_path)
#     return redirect(url_for('index'))


def parseCSV(filePath):
    col_names = ['Name', 'State', 'Grades',
                 'Room', 'Telnum', 'Picture', 'Keywords']

    csvData = pd.read_csv(filePath, names=col_names,
                          header=None, na_filter=False)
    for i, row in csvData.iterrows():
        print("EAch row")
        print(row['Telnum'])
        sql = "INSERT INTO details(Name,State,Grade, Room,Telnum,Picture,Keywords) VALUES (%s,%s,%s,%s,%s,%s,%s)"
        value = (row['Name'], row['State'], row['Grades'], row['Room'],
                 row['Telnum'], row['Picture'], row['Keywords'])

        dbcursor.execute(sql, value)
        conn.commit()

    return redirect(url_for('index'))

# @app.route("/details/")
# @app.route("/details/<name>")
# def details(name = None):
#     return render_template(
#         "details.html",
#         name=name,
#         date=datetime.now()
#     )
